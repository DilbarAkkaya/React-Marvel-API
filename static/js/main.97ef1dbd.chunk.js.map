{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","components/spinner/spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBiundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97ef1dbd.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","const Spinner = () => {\r\n  return (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n  )\r\n\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <img src={img} alt=\"Error\"/>\r\n  )\r\n}\r\nexport default ErrorMessage;","class MarvelService {\r\n  _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n  _apiKey = 'apikey=a87f33c97fe5b731013fc345d75f2fb1';\r\n  _baseOffset = 210;\r\n  getResource = async (url) => {\r\n    let res = await fetch(url);\r\n\r\n    if (!res.ok) {\r\n      throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n    }\r\n    return await res.json();\r\n  }\r\n  getAllCharacters = async (offset=this._baseOffset) => {\r\n    const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n    return res.data.results.map(this._transformCharacter);\r\n  }\r\n  getCharacter = async (id) => {\r\n    const res = await this.getResource(`${this._apiBase}/characters/${id}?${this._apiKey}`);\r\n    return this._transformCharacter(res.data.results[0]);\r\n  }\r\n\r\n  _transformCharacter = (char) => {\r\n    return {\r\n      id: char.id,\r\n      name: char.name,\r\n      description: char.description,\r\n      thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n      homepage: char.urls[0].url,\r\n      wiki: char.urls[1].url,\r\n      comics: char.comics.items,\r\n    }\r\n  }\r\n}\r\n\r\nexport default MarvelService;","import { Component } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport Spinner from '../../components/spinner/spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport MarvelService from '../../services/MarvelService';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false,\n    }\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n      //  this.timerId = setInterval(this.updateChar, 3000)\n    }\n    componentWillUnmount() {\n        clearInterval(this.timerId)\n    }\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n    onCharLoading = () => {\n        this.setState({\n            loading: true})\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.onCharLoading();\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n    render() {\n        const { char, loading, error } = this.state;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? <View char={char} /> : null;\n        return (\n            <div className=\"randomchar\" >\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button onClick={this.updateChar} className=\"button button__main\">\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n    let imgStyle = {'objectFit':'contain'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit':'contain'};\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport Spinner from '../spinner/spinner';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        charEnded: false\n    }\n\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.onCharListLoading();\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharListLoaded)\n            .catch(this.onError)\n    }\n\n    onCharListLoaded = (newCharList) => {\n        let ended= false;\n        if (newCharList.length < 9) {\n            ended = true;\n        }\n        this.setState(({offset, charList})=> ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false,\n            offset:offset + 9,\n            charEnded: ended\n        }))\n    }\n    onCharListLoading = ()=> {\n        this.setState({\n            newItemLoading:true\n        })\n    }\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false\n        })\n    }\n    renderItems(arr) {\n        const items = arr.map((item) => {\n            let imgStyle = { 'objectFit': 'cover' };\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { 'objectFit': 'unset' };\n            }\n            return (\n                <li\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}>\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className='char__name'>{item.name}</div>\n                </li>\n            )\n        });\n        return (\n            <ul className='char__grid'>\n                {items}\n            </ul>\n        )\n    }\n    render() {\n        const { charList, loading, error, offset, newItemLoading, charEnded } = this.state;\n        const items = this.renderItems(charList);\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error) ? items : null;\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button \n                  className=\"button button__main button__long\"\n                  disabled={newItemLoading}\n                  style={{'display': charEnded ? 'none' : 'block'}}\n                  onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport Spinner from '../spinner/spinner';\nimport Skeleton from '../skeleton/Skeleton';\nimport PropTypes from 'prop-types';\nimport './charInfo.scss';\n\nclass CharInfo extends Component {\n    state = {\n        char: null,\n        loading: false,\n        error: false,\n    }\n    marvelService = new MarvelService();\n\n    componentDidMount() {\n        this.updateChar();\n    }\n    componentDidUpdate(prevProps) {\n        if (this.props.charId !== prevProps.charId) {\n            this.updateChar();\n        }\n    }\n\n    updateChar = () => {\n        const { charId } = this.props;\n        if (!charId) {\n            return;\n        }\n\n        this.onCharLoading();\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({ char, loading: false })\n    }\n\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n    onError = () => {\n        this.setState({\n            loading: false,\n            error: true\n        })\n    }\n    render() {\n        const { char, loading, error } = this.state;\n        const skeleton = char || loading || error ? null : <Skeleton />;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const spinner = loading ? <Spinner /> : null;\n        const content = !(loading || error || !char) ? <View char={char} /> : null;\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n            </div>\n        )\n    }\n\n}\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n    let imgStyle = { 'objectFit': 'contain' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' };\n    }\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : \"there is no comics with this character\"}\n                {comics.map((item, i) => {\n                    if (i > 9) return;\n                    return (\n                        <li key={i} className=\"char__comics-item\">{item.name}</li>\n                    )\n                })\n                }\n\n\n            </ul>\n        </>\n    )\n}\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state ={\r\n    error: false\r\n  }\r\n  componentDidCatch (error, errorInfo) {\r\n    console.log(error, errorInfo);\r\n    this.setState({\r\n      error:true\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBiundary\";\nimport PropTypes from 'prop-types';\n\nimport decoration from '../../resources/img/vision.png';\nclass App extends Component {\n    state = {\n        selectedChar: null,\n    }\n    onCharSelected = (id) => {\n        this.setState({\n            selectedChar: id\n        })\n    }\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <RandomChar />\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected} />\n                        <ErrorBoundary>                        <CharInfo charId={this.state.selectedChar} /></ErrorBoundary>\n\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n\n}\nApp.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}